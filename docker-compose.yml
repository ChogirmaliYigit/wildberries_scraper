services:
  db:
    container_name: wildberries_scraper_db
    image: postgres:16
    volumes:
        - postgres_data:/var/lib/postgresql/data/
    env_file:
        - .env
    ports:
        - '5432:5432'
    environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASS}
        - POSTGRES_DB=${DB_NAME}
        - POSTGRES_HOST=${DB_HOST}
        - POSTGRES_PORT=${DB_PORT}
    restart: always

  web:
      container_name: wildberries_scraper_backend
      restart: always
      build:
          context: ./
          dockerfile: Dockerfile
      command: ./entrypoint.sh
      security_opt:
          - seccomp:unconfined
      volumes:
          - ./:/app
          - ./static:/home/app/web/static
          - ./media:/home/app/web/media
          - ./locale:/home/app/web/locale
      env_file:
          - .env
      environment:
          - TZ=Asia/Tashkent
      ports:
          - '8000:8000'
      depends_on:
          - db
          - redis

  redis:
    container_name: wildberries_scraper_redis
    image: redis:7.2.4-alpine
    volumes:
      - redis_data:/data
    restart: always

  celery_worker_wildberries_scraper:
    container_name: wildberries_scraper_celery_worker
    build:
        context: ./
        dockerfile: Dockerfile
    image: celery_worker
    command: /start-celeryworker
    volumes:
        - .:/app
    env_file:
        - .env
    depends_on:
        - redis
        - db

  celery_beat:
      container_name: wildberries_scraper_celery_beat
      build:
          context: ./
          dockerfile: Dockerfile
      image: celery_beat
      command: /start-celerybeat
      volumes:
          - .:/app
      env_file:
          - .env
      depends_on:
          - redis
          - db

volumes:
  postgres_data:
  redis_data:
