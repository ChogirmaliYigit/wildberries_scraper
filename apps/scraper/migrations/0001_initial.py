# Generated by Django 5.0.7 on 2024-08-26 18:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "source_id",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, unique=True, verbose_name="Source ID"
                    ),
                ),
                (
                    "content",
                    models.TextField(blank=True, null=True, verbose_name="Content"),
                ),
                ("rating", models.IntegerField(verbose_name="Rating")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("accepted", "Accepted"),
                            ("not_accepted", "Not accepted"),
                            ("not_reviewed", "Not reviewed"),
                        ],
                        default="not_reviewed",
                        max_length=50,
                        verbose_name="Status",
                    ),
                ),
                (
                    "wb_user",
                    models.TextField(
                        blank=True, null=True, verbose_name="Wildberries user"
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="comments/files/",
                        verbose_name="File",
                    ),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[("image", "Image"), ("video", "Video")],
                        default="image",
                        max_length=20,
                    ),
                ),
                ("source_date", models.DateTimeField(blank=True, null=True)),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="scraper.comment",
                        verbose_name="Reply to",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
            },
        ),
        migrations.CreateModel(
            name="CommentFiles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "file_link",
                    models.TextField(blank=True, null=True, verbose_name="File link"),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[("image", "Image"), ("video", "Video")],
                        default="image",
                        max_length=20,
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="scraper.comment",
                        verbose_name="Comment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment file",
                "verbose_name_plural": "Comment files",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "title",
                    models.TextField(blank=True, null=True, verbose_name="Title"),
                ),
                (
                    "image_link",
                    models.TextField(blank=True, null=True, verbose_name="Image"),
                ),
                (
                    "source_id",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, unique=True, verbose_name="Source ID"
                    ),
                ),
                (
                    "slug_name",
                    models.TextField(blank=True, null=True, verbose_name="Slug name"),
                ),
                (
                    "shard",
                    models.TextField(blank=True, null=True, verbose_name="Shard"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sub_categories",
                        to="scraper.category",
                        verbose_name="Parent category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="RequestedComment",
            fields=[
                (
                    "comment_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="scraper.comment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Requested comment",
                "verbose_name_plural": "Requested comments",
            },
            bases=("scraper.comment",),
        ),
        migrations.CreateModel(
            name="RequestedCommentFile",
            fields=[
                (
                    "commentfiles_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="scraper.commentfiles",
                    ),
                ),
            ],
            options={
                "verbose_name": "Requested comment file",
                "verbose_name_plural": "Requested comment files",
            },
            bases=("scraper.commentfiles",),
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "title",
                    models.TextField(blank=True, null=True, verbose_name="Title"),
                ),
                (
                    "root",
                    models.IntegerField(blank=True, null=True, verbose_name="Root"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="scraper.category",
                        verbose_name="Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
            },
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_likes",
                        to="scraper.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Like",
                "verbose_name_plural": "Likes",
            },
        ),
        migrations.CreateModel(
            name="Favorite",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_favorites",
                        to="scraper.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Favorite",
                "verbose_name_plural": "Favorites",
            },
        ),
        migrations.AddField(
            model_name="comment",
            name="product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_comments",
                to="scraper.product",
                verbose_name="Product",
            ),
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "color",
                    models.TextField(blank=True, null=True, verbose_name="Color"),
                ),
                (
                    "price",
                    models.TextField(blank=True, null=True, verbose_name="Price"),
                ),
                (
                    "source_id",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, unique=True, verbose_name="Source ID"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variants",
                        to="scraper.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product variant",
                "verbose_name_plural": "Product variants",
            },
        ),
        migrations.CreateModel(
            name="ProductVariantImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "image_link",
                    models.TextField(unique=True, verbose_name="Image link"),
                ),
                (
                    "file_type",
                    models.CharField(
                        choices=[("image", "Image"), ("video", "Video")],
                        default="image",
                        max_length=20,
                    ),
                ),
                (
                    "variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="scraper.productvariant",
                        verbose_name="Product variant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product variant image",
                "verbose_name_plural": "Product variant images",
            },
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                condition=models.Q(("title", None), _negated=True),
                fields=("title",),
                name="unique_title_exclude_null_category",
            ),
        ),
        migrations.AddConstraint(
            model_name="category",
            constraint=models.UniqueConstraint(
                condition=models.Q(("source_id", None), _negated=True),
                fields=("source_id",),
                name="unique_source_id_exclude_null_category",
            ),
        ),
        migrations.AddField(
            model_name="requestedcommentfile",
            name="requested_comment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requested_files",
                to="scraper.requestedcomment",
                verbose_name="Comment",
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.UniqueConstraint(
                condition=models.Q(("title", None), _negated=True),
                fields=("title",),
                name="unique_title_exclude_null_product",
            ),
        ),
        migrations.AddConstraint(
            model_name="comment",
            constraint=models.UniqueConstraint(
                condition=models.Q(("source_id", None), _negated=True),
                fields=("source_id",),
                name="unique_source_id_exclude_null_comment",
            ),
        ),
        migrations.AddConstraint(
            model_name="productvariant",
            constraint=models.UniqueConstraint(
                condition=models.Q(("source_id", None), _negated=True),
                fields=("source_id",),
                name="unique_source_id_exclude_null_product_variant",
            ),
        ),
    ]
